@model List<Municipal_Services_Portal.Models.Event>

@{
    ViewData["Title"] = "Local Events";
    var categories = ViewBag.Categories as List<string>;
    var recentlyViewed = ViewBag.RecentlyViewed as List<Municipal_Services_Portal.Models.Event>;
    var currentSearch = ViewBag.CurrentSearch as string ?? "";
    var currentCategory = ViewBag.CurrentCategory as string ?? "";
    var currentSort = ViewBag.CurrentSort as string ?? "";
    var suggestedEvents = ViewBag.SuggestedEvents as List<Event> ?? new List<Event>();
    var announcements = ViewBag.Announcements as List<Announcement> ?? new List<Announcement>();
    var date = ViewBag.CurrentDate as string ?? "";
}

<body class="events">

<div class="container mt-4">
    <div class="events-header">
        <h1>Upcoming Events</h1>
    </div>
    <div class="row">
        <div class="col-lg-9">
            <div class="mb-4 d-flex gap-2">
                <input type="date" id="datePicker"  class="form-control" value="@date" />
                <select id="categorySearch" class="form-control">
                    <option value="">Search By Category</option>
                    @foreach (var category in categories)
                    {
                        if (category == currentCategory)
                        {
                            <option value="@category" selected>@category</option>
                        }
                        else
                        {
                            <option value="@category">@category</option>
                        }
                    }
                </select>
                <input type="text" id="searchInput" placeholder="Search By Event Name" class="form-control" value="@currentSearch" />
                <select id="sortSelect" class="form-control">
                    <option value="">Sort By</option>
                    <option value="dateAscending" selected="@(currentSort == "dateAscending")">Date Ascending</option>
                    <option value="dateDescending" selected="@(currentSort == "dateDescending")">Date Descending</option>
                    <option value="nameAscending" selected="@(currentSort == "nameAscending")">Name A to Z</option>
                    <option value="nameDescending" selected="@(currentSort == "nameDescending")">Name Z to A</option>
                    <option value="categoryAscending" selected="@(currentSort == "categoryAscending")">Category A to Z</option>
                    <option value="categoryDescending" selected="@(currentSort == "categoryDescending")">Category Z to A</option>
                </select>
                <button class="btn-cta mt-auto" onclick="applySortFilter()">Apply</button>
                <button class="btn btn-secondary mt-2" onclick="clearFilters()">Clear</button>
            </div>

            <div id="eventsGrid" class="row custom-events-grid">
                @foreach (var ev in Model)
                {
                    <div class="col-md-4">
                        <div class="card h-100 event-card" data-name="@ev.eventName.ToLower()" data-category="@ev.Category">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@ev.eventName</h5>
                                <p class="card-subtitle mb-1"><strong>Category:</strong> @ev.Category</p>
                                <p class="card-subtitle mb-1"><strong>Date:</strong> @ev.Date.ToString("dd MMM yyyy")</p>
                                <p class="card-subtitle mb-1"><strong>Location:</strong> @ev.Location</p>
                                <button class="btn-cta mt-auto"
                                        onclick="viewEventAndShowModal('@ev.eventName', '@ev.Category', '@ev.Date.ToString("dd MMM yyyy")', '@ev.Location', `@ev.Description`, '@ev.imgPath')">
                                    View Details
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-lg-3">
            <h4 class="recently-viewed-heading">Recently Viewed Events</h4>
            <ul class="list-group" id="recentlyViewedList">
                @if (recentlyViewed.Count > 0)
                {
                    @foreach (var viewedEvent in recentlyViewed)
                    {
                        <li class="list-group-item" style="border-radius:10px; box-shadow:0 3px 8px rgba(0,0,0,0.15);">
                            @viewedEvent.eventName - @viewedEvent.Date.ToString("dd MMM")
                        </li>
                    }
                }
            </ul>
            <h4 class="recently-viewed-heading">Recommended Events</h4>
            <ul class="list-group" id="recommendedList">
                @if (suggestedEvents.Count > 0)
                {
                    foreach (var suggestedEvent in suggestedEvents)
                    {
                            <li class="list-group-item" style="border-radius:10px; box-shadow:0 3px 8px rgba(0,0,0,0.15); margin-5;">
                                @suggestedEvent.eventName - @suggestedEvent.Date.ToString("dd MMM")
                            </li>
                     }
             }
            </ul>
        </div>
    </div>
</div>

<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-3" style="border-radius: 1rem; box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15); background-color: #fff;">
            <div class="modal-header border-0 pb-0 d-flex justify-content-between align-items-center">
                <h5 class="modal-title" id="eventModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex flex-column align-items-start">
                <p><strong>Category:</strong> <span id="modalCategory"></span></p>
                <p><strong>Date:</strong> <span id="modalDate"></span></p>
                <p><strong>Location:</strong> <span id="modalLocation"></span></p>
                <hr class="my-2" />
                <img id="modalImage" src="" alt="Event Image" class="img-fluid mb-3 rounded" style="display:none;" />
                <p id="modalDescription"></p>
            </div>
        </div>
    </div>
</div>

<div class="announcements-section mt-5 py-5">
     <div class="container">
         <h2 class="announcements-heading text-center mb-4">Community Announcements</h2>
         <div class="row">
              @if (announcements.Count > 0)
                {
                  foreach (var announcement in announcements)
                    {
                     <div class="col-md-4 mb-4">
                        <div class="card announcement-card h-100 p-3">
                             <h5 class="card-title">@announcement.name</h5>
                             <p class="card-text">@announcement.description</p>
                             <p class="card-subtitle text-muted mt-2">
                             <strong>Date:</strong> @announcement.Date.ToString("dd MMM yyyy")
                             </p>
                        </div>
                     </div>
                    }
                }
         </div>
     </div>
</div>

</body>

@section Scripts {
<script>

    //Takes the selected search or filter and applies it to the list of events
    function applySortFilter() {
        var search = document.getElementById('searchInput').value;
        var category = document.getElementById('categorySearch').value;
        var sortOrder = document.getElementById('sortSelect').value;
        var date = document.getElementById('datePicker').value;
        window.location.href = `@Url.Action("Events")?search=${encodeURIComponent(search)}&categorySearch=${encodeURIComponent(category)}&sortOrder=${encodeURIComponent(sortOrder)}&date=${encodeURIComponent(date)}`;
    }

    //Sends event to recently viewed list and allows the user to view each event details in a popup
    function viewEventAndShowModal(eventName, category, date, location, description, imgPath) {
        fetch('@Url.Action("ViewEvent")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: 'eventName=' + encodeURIComponent(eventName)
        }).then(response => {
            const ul = document.getElementById('recentlyViewedList');

            Array.from(ul.children).forEach(li => {
                if (li.innerText.startsWith(eventName)) li.remove();
            });

            const li = document.createElement('li');
            li.className = 'list-group-item';
            li.innerText = `${eventName} - ${date}`;
            ul.prepend(li);

            while (ul.children.length > 5) {
                ul.removeChild(ul.lastChild);
            }
        });

        document.getElementById('eventModalLabel').innerText = eventName;
        document.getElementById('modalCategory').innerText = category;
        document.getElementById('modalDate').innerText = date;
        document.getElementById('modalLocation').innerText = location;
        document.getElementById('modalDescription').innerText = description;

        var img = document.getElementById('modalImage');

        if (imgPath) 
        { 
            img.src = imgPath; img.style.display = 'block'; 
        }
        else { 
            img.style.display = 'none'; 
        }

        var modal = new bootstrap.Modal(document.getElementById('eventModal'));
        modal.show();
    }
     
    //Clears all the inputs from the search and filters
    function clearFilters() 
    {
        document.getElementById('searchInput').value = '';
        document.getElementById('categorySearch').value = '';
        document.getElementById('datePicker').value = '';
        document.getElementById('sortSelect').value = '';
        window.location.href = '@Url.Action("Events")';
    }
</script>
}

//Reference:
//OpenAI, 2025. ChatGPT (Version GPT-5 mini).[Large language model].Available at: https://chatgpt.com/c/68cd30d8-86c4-8323-866a-e2bc1d538387 [Accessed: 13 October 2025]. 